---
version: '3'

services:
  kafka:
    image: confluentinc/cp-enterprise-kafka:7.3.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:29092'
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC: '_confluent-metrics'
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_METRICS_REPORTER_ENABLED: 'true'
      KAFKA_OPTS: "-javaagent:/opt/kafka/libs/jmx_prometheus_javaagent-0.20.0.jar=7071:/opt/kafka/config/jmx_exporter_config_kafka.yml"
    volumes:
      - ./scripts/workaround.sh:/tmp/workaround.sh
      - ./exporter/jmx_prometheus_javaagent-0.20.0.jar:/opt/kafka/libs/jmx_prometheus_javaagent-0.20.0.jar
      - ./exporter/configurations/jmx_exporter_config_kafka.yml:/opt/kafka/config/jmx_exporter_config_kafka.yml
    command: "bash -c '/tmp/workaround.sh && /etc/confluent/docker/run'"
    healthcheck:
      test: nc -zv kafka 9092 || exit 1
      interval: 5s
      retries: 10

  connect:
    image: confluentinc/cp-kafka-connect-base:7.3.1
    hostname: connect
    container_name: connect
    depends_on:
      kafka:
        condition: service_healthy
      builder:
        condition: service_completed_successfully
    ports:
      - 8083:8083
      - 8888:8888
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_PORT: 8083
      KAFKA_DEBUG: true
      JAVA_DEBUG_PORT: "*:8888"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.converters.ByteArrayConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java/kafka-connector-pubnub'
      KAFKA_OPTS: "-javaagent:/opt/kafka/libs/jmx_prometheus_javaagent-0.20.0.jar=7072:/opt/kafka/config/jmx_exporter_config_connect.yml"
    volumes:
      - ./target:/usr/share/java/kafka-connector-pubnub
      - ./exporter/jmx_prometheus_javaagent-0.20.0.jar:/opt/kafka/libs/jmx_prometheus_javaagent-0.20.0.jar
      - ./exporter/configurations/jmx_exporter_config_connect.yml:/opt/kafka/config/jmx_exporter_config_connect.yml
    healthcheck:
      interval: 5s
      retries: 10
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8083

  builder:
    image: maven:3.8-openjdk-18
    hostname: builder
    container_name: builder
    volumes:
      - .:/usr/share/java/kafka-connector-pubnub
    command: "bash -c 'cd /usr/share/java/kafka-connector-pubnub; mvn clean package'"

  producer:
    image: confluentinc/cp-kafka:7.3.1
    hostname: producer
    container_name: producer
    command:
      - /bin/sh
      - -c
      - |
        while true
          do echo '{"timestamp":'$(date +%s)'}' | \
            /usr/bin/kafka-console-producer \
            --bootstrap-server kafka:29092 \
            --topic pubnub
          sleep 0.001
        done
    depends_on:
      kafka:
        condition: service_healthy
  consumer:
    image: confluentinc/cp-kafka:7.3.1
    hostname: consumer
    container_name: consumer
    command: "bash -c 'while true; do /usr/bin/kafka-console-consumer --bootstrap-server kafka:29092 --topic pubnub; sleep 1; done'"
    depends_on:
      connect:
        condition: service_healthy
      kafka:
        condition: service_healthy
  prometheus:
    image: prom/prometheus:v2.30.0
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - kafka
      - connect

  grafana:
      image: grafana/grafana:8.2.0
      volumes:
        - grafana-storage:/var/lib/grafana
        - ./graphana/datasources:/etc/grafana/provisioning/datasources
        - ./graphana/dashboards:/etc/grafana/provisioning/dashboards
      environment:
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: admin
        GF_INSTALL_PLUGINS: grafana-piechart-panel
      ports:
        - "3000:3000"
      depends_on:
        - prometheus
volumes:
  grafana-storage:
  prometheus_data: